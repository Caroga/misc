#!/bin/bash
# A simple minecraft server management tool
#
# Copyright (c) 2012 fbt <fbt@fleshless.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#   - Redistributions of source code must retain the above copyright notice, 
#       this list of conditions and the following disclaimer.
#   - Redistributions in binary form must reproduce the above copyright notice,
#       this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

## config
srv_dir="$HOME/srv"
jar_dir="$HOME/jar"

backup_dir="$HOME/backup"

tmp_dir='/tmp/ramdisk/creeper'

run_dir="${tmp_dir}/run"
world_dir="${tmp_dir}/world"
fifo_dir="${tmp_dir}/fifo"
log_dir="${tmp_dir}/log"
patch_dir="${tmp_dir}/patch"

# srv_ver='1.4.5'

communication_method='fifo'

java_heapsize='1G'

srv_jar_url='https://s3.amazonaws.com/MinecraftDownload/launcher/minecraft_server.jar'
assets_url='http://assets.minecraft.net'
# /config

## functions
source '/opt/bashlib/bashlib'

creeper.usage() {
	local script_name=`basename $0`

	echo "Usage: $script_name <action> <server> [args]"
	echo ""
	echo "Actions:"
	echo "	create <server> [version]			# Create a new server instance."
	echo "	start/stop/restart <server>			# These are self-explanatory, I believe."
	echo "	patch <server> <zip/jar>			# Patch the instance's minecraft_server.jar with a zip/jar file."
	echo "	backup <server>						# Make a backup of the world dir."
	echo "	status <server>						# Check if the server is running."
	echo "	raw <server> <line>					# Send a raw command to the server. Allows for special chars (like \n)."
}

creeper.msg() { echo "[creeper] $1"; }
creeper.err() { creeper.msg "(error) $1" 2>&1; }

creeper.die() { echo "$2"; exit "$1"; }

creeper.get_jar() {
	[[ "$srv_ver" ]] && {
		local tmp_url="http://${assets_url}/${1//./_}/minecraft_server.jar"
	} || {
		local tmp_url="srv_jar_url"
	}
	
	creeper.msg "Getting minecraft_server.jar ($tmp_url)..."
	curl -skL "$srv_jar_url"
}

creeper.raw() {
	case "$communication_method" in
		fifo) echo -ne "$1\n" >> "$srv_fifo";;
		proc) echo "$1" >> "/proc/$srv_pid/fd/0";;
	esac
}
creeper.say() { creeper.raw "say $1"; }

creeper.create() {
	[[ "$1" ]] && { srv_ver="$1"; }

	[[ -d "$srv_dir/$srv_name" ]] && {
		echo "$srv_name already exists"
		return 1;
	}

	mkdir -p "$srv_dir/$srv_name"

	[[ "$srv_ver" ]] && {
		creeper.get_jar > "$srv_dir/$srv_name/minecraft_server.jar" || {
			creeper.err "Cannot download the server jar :("
			return 1
		}
	} || {
		[[ -f "$jar_dir/minecraft_server.jar" ]] || {
			creeper.msg "$jar_dir/minecraft_server.jar not found, attempting to download..."
			creeper.get_jar > "$jar_dir/minecraft_server.jar" || {
				creeper.err "Cannot download the server jar :("
				return 1
			}
		}
		creeper.msg "success"
		
		cp "$jar_dir/minecraft_server.jar" "$srv_dir/$srv_name/minecraft_server.jar"
	}

	[[ "$world_dir" ]] && {
		mkdir "$world_dir/$srv_name"
		ln -s "$world_dir/$srv_name" "$srv_dir/$srv_name/world"
	}
}

creeper.start() {
	srv_start_cmd="java -jar -Xmx${java_heapsize} -Xms${java_heapsize} minecraft_server.jar"
	cd "$srv_dir/$srv_name"
	$srv_start_cmd > "$log_dir/$srv_name.log" 2>"$log_dir/$srv_name.err"
}

creeper.daemon() {
	[[ "$srv_pid" ]] && {
		blib.sys.pid_check "$srv_pid" && {
			creeper.err "$srv_name is already running with PID: $srv_pid"
			return 1
		}
	}

	[[ -p "$srv_fifo" ]] && {
		rm "$srv_fifo"; mkfifo "$srv_fifo"
	} || {
		[[ -e "$srv_fifo" ]] && {
			creeper.die '14' "$srv_fifo exists, but is not a named pipe!"
		} || {
			mkfifo "$srv_fifo"
		}
	}

	coproc creeper.start

	exec 7>&${COPROC[1]}
	tail --pid="${COPROC_PID}" -f -n 0 ${srv_fifo} >&7 &

	srv_pid="$COPROC_PID"
	echo "$srv_pid" > "$srv_pidfile"

	blib.sys.pid_check "$srv_pid" && {
		echo "$srv_name started with PID: $srv_pid"
		echo -ne '\n' >> "$srv_fifo"
	}
}

creeper.stop() {
	creeper.status && {
		creeper.raw 'stop'
		blib.sys.pid_wait "$srv_pid" || { echo 'Could not stop the server :('; return 1; }
		rm "$srv_fifo"
	} || {
		echo "$srv_name does not seem to be running"
	}
}

creeper.status() {
	local rc='0'

	[[ "$srv_pid" ]] && {
		blib.sys.pid_check "$srv_pid" || { local rc='1'; }
	}

	return "$rc"
}

creeper.backup() {
	[[ -f "$run_dir/${srv_name}_backup.lock" ]] && {
		echo "Another backup job is already running"
		return 1
	}

	echo '1' > "$run_dir/${srv_name}_backup.lock"

	creeper.raw 'save-off'
	creeper.raw 'save-all'

	sleep 10

	srv_world_dir=`realpath "$srv_dir/$srv_name/world"`
	backup_archive="$backup_dir/${srv_name}_`date +%Y%m%d.%H%M%S`.tar.gz"

	creeper.msg "Making a backup of $srv_world_dir to $backup_archive"

	tar cf - "$srv_world_dir" | gzip > "$backup_archive"

	creeper.raw 'save-on'

	rm "$run_dir/${srv_name}_backup.lock"
}

creeper.patch() {
	[[ "$miner_path" ]] || { miner_path=`which miner`; }
	[[ "$miner_path" ]] || { creeper.err "miner not found. You can get it at https://github.com/fbt/misc or https://bitbucket.org/fbt/scripts"; return 1; }

	local mod_archive="$1"
	local target_jar="$srv_dir/$srv_name/minecraft_server.jar"

	"$miner_path" -s -j "$target_jar" "$mod_archive" || {
		creeper.err "Something went wrong with miner. Patching failed."
		return 1
	}
}

# /functions

[[ -f "$HOME/.creeperrc" ]] && { source "$HOME.creeperrc"; }

while getopts "f" option; do
	case "$option" in
		f) foo="$OPTARG";;
	esac
done

[[ "$OPTIND" ]] && { shift $(($OPTIND-1)); }

# Making sure the world_dir exists and is writable
[[ "$world_dir" ]] && {
	[[ -d "$world_dir" ]] || {
		mkdir -p "$world_dir" || { creeper.die 11 "Cannot create $world_dir"; }
	}

	[[ -w "$world_dir" ]] || { creeper.die 12 "$world_dir is not writable"; }
}

# making sure other directories exist and are writable
for i in "$srv_dir" "$jar_dir" "$run_dir" "$fifo_dir" "$log_dir" "$backup_dir"; do
	[[ -d "$i" ]] || {
		mkdir -p "$i" || { creeper.die 13 "Cannot create $i"; }
	}
done

srv_name="$2"
action="$1"

[[ "$srv_name" ]] || { creeper.usage; creeper.die 16; }
[[ "$action" ]] || { action='status'; }

srv_pidfile="$run_dir/$srv_name.pid"
[[ -f "$srv_pidfile" ]] && { srv_pid=`cat "$srv_pidfile"`; }

srv_fifo="$fifo_dir/$srv_name.fifo"

srv_cfgfile="$srv_dir/$srv_name/.creeperrc"
[[ -f "$srv_cfgfile" ]] && { source "$srv_cfgfile"; }

[[ -f "$run_dir/${srv_name}_backup.lock" ]] && {
	creeper.die 17 "A backup is running, can't do nothin', boss."
}

case "$action" in
	create) creeper.create "$3";;
	start) creeper.daemon;;
	stop) creeper.stop;;

	patch) creeper.patch "$3";;

	restart) creeper.stop && creeper.daemon;;

	backup) creeper.backup;;

	status)
		creeper.status && {
			echo "$srv_name is running with PID: $srv_pid"
		} || {
			creeper.die 17 "$srv_name is not running"
		}
	;;

	pid) creeper.status && { echo "$srv_pid"; } || { exit 27; };;

	raw) creeper.raw "$3";;

	h|?) creeper.usage;;
esac
