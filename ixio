#!/usr/bin/env bash
# Maintainer: Jack L. Frost <fbt@fleshless.org>

_self="${0##*/}"
cfg_url="http://ix.io"

echo() { printf '%s\n' "$*"; }
err() { echo "$*" >&2; }

cat() { while read; do echo "$REPLY"; done }

usage() {
	cat <<- EOF
		Usage: ${_self} [flags] < <file>
		    Flags:
		        -h|--help            Show this message
		        -d|--delete <id>     Delete an id
		        -p|--put <id>        Overwrite an id
		        -l|--limit <num>     Number of times the paste can be read before it's deleted.
		        -u|--user            Username for autherntication. Turns on authentication.
		        -n|--auth-toggle     Toggle authentication. Turns authentication on or off (even if a username is supplied) depending
		                               on the default set in the config file (if any). Without one, the default is on.
	EOF
}

set_argv() {
	declare arg opt c
	declare -ag ARGV

	while (( $# )); do
		unset -v arg opt c

		case "$1" in
			(--) ARGV+=( "$1" ); break;;

			(--*)
				IFS='=' read arg opt <<< "$1"
				ARGV+=( "$arg" )

				[[ "$opt" ]] && {
					ARGV+=( "$opt" )
				}
			;;

			(-*)
				while read -n1 c
				do
					case "$c" in
						-|'') :;;
						*) ARGV+=( "-$c" );;
					esac
				done <<< "$1"
			;;

			(*) ARGV+=( "$1" );;
		esac
		shift
	done
}

main() {
	declare flag_nologin cfg_username action paste_id _ec
	declare -a curl_options

	flag_nologin=0
	action='upload'

	type -P curl &>/dev/null || {
		err "Can't find curl in your system; you need it for this script to work."
		return 1
	}

	[[ -f "$HOME/.config/ixio.rc" ]] && {
		if ! source "$HOME/.config/ixio.rc"; then
			_ec="$?"
			err "Failed to source the config at ${HOME}/.config/ixio.rc ($_ec)"
			return 1
		fi
	}

	while (( "$#" )); do
		case "$1" in
			(-h|--help)
				usage
				return 0;;

			(-u|--user)
				cfg_username="$2"
				shift;;

			(-n|--auth-toggle)
				if (( flag_nologin )); then
					flag_nologin=0
				else
					flag_nologin=1
				fi
			;;

			(-d|--delete)
				action='delete'
				paste_id="$2"
				shift;;

			(-l|--limit)
				curl_options+=( '-F' "read:1=${2}" )
				shift;;

			(-p|--put)
				curl_options+=( '-X' 'PUT' )
				paste_id="$2"
				shift;;

			(--)
				shift
				break;;

			(-*)
				err "Unknown key: $1"
				usage
				return 1;;

			(*) break;;
		esac
		shift
	done

	if [[ "$cfg_username" ]] && (( ! flag_nologin )); then
		[[ "$cfg_password" ]] || {
			read -sp "Password for $cfg_username: " cfg_password	
		}

		[[ "$cfg_password" ]] || {
			err "no password provided, bailing."
			return 1
		}

		curl_options+=( '-u' "${cfg_username}:${cfg_password}" )
	fi

	case "$action" in
		upload) curl ${curl_options[*]-} -F 'f:1=<-' "${cfg_url}/${paste_id-}";;
		delete) curl ${curl_options[*]-} -X DELETE "${cfg_url}/${paste_id}";;
	esac
}

set_argv "$@"
main "${ARGV[@]}"
